openapi: 3.0.0
info:
  title: YANDEX IT Events Platform API
  version: 1.0.0
  description: API для платформы Яндекс IT-мероприятий

servers:
  - url: https://api.itevents.com/
  
security:
  - bearerAuth: []

tags:
  - name: events
    description: Мероприятия
  - name: users
    description: Операции с пользователями
  - name: favorites
    description: Избранные мероприятия
  - name: search
    description: Поиск и фильтрация мероприятий
  - name: reviews
    description: Отзывы и оценки
  - name: notifications
    description: Уведомления
  - name: streams
    description: Онлайн-трансляции
  - name: analytics
    description: Аналитика
  - name: admin
    description: Администрирование
  - name: tokens
    description: Работа с токеном авторизации

paths:
  /api/v1/tokens/refresh/:
    post:
      tags:
        - tokens
      summary: Обновление JWT токенов
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refresh:
                  type: string
              required:
                - refresh
      responses:
        '200':
          description: JWT токены успешно обновлены
        '400':
          description: Отсутствует обязательное поле "refresh"
        '401':
          description: Токен некорректен или срок его действия истёк

  /api/v1/events:
    get:
      tags:
        - events
      summary: Получение списка мероприятий
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: Успешный ответ со списком мероприятий
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'

    post:
      tags:
        - events
      summary: Создание нового мероприятия
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEvent'
      responses:
        '201':
          description: Мероприятие успешно создано
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '400':
          description: Неверные данные запроса
        '401':
          description: Необходима авторизация
      security:
        - bearerAuth: []

  /api/v1/events/{eventId}:
    get:
      tags:
        - events
      summary: Получение информации о мероприятии
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Успешный ответ с информацией о мероприятии
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '404':
          description: Мероприятие не найдено

    patch:
      tags:
        - events
      summary: Обновление информации о мероприятии
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEvent'
      responses:
        '200':
          description: Информация о мероприятии успешно обновлена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '400':
          description: Неверные данные запроса
        '401':
          description: Необходима авторизация
        '404':
          description: Мероприятие не найдено
      security:
        - bearerAuth: []
        
    delete:
      tags:
        - events
      summary: Удаление мероприятия
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Мероприятие успешно удалено
        '401':
          description: Необходима авторизация
        '404':
          description: Мероприятие не найдено
      security:
        - bearerAuth: []
        
  /api/v1/events/{eventId}/participants:
    get:
      tags:
        - events
      summary: Получение списка зарегистрированных участников мероприятия
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Успешный ответ со списком зарегистрированных участников
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participant'
        '404':
          description: Мероприятие не найдено

  /api/v1/events/{eventId}/register:
    post:
      tags:
        - events
      summary: Регистрация пользователя на мероприятие
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Успешная регистрация на мероприятие
        '400':
          description: Пользователь уже зарегистрирован на мероприятие
        '401':
          description: Необходима авторизация
        '404':
          description: Мероприятие не найдено
      security:
        - bearerAuth: []
        
  /api/v1/events/{eventId}/unregister:
    delete:
      tags:
        - events
      summary: Отмена регистрации пользователя на мероприятие
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Успешная отмена регистрации на мероприятие
        '401':
          description: Необходима авторизация
        '404':
          description: Мероприятие не найдено или пользователь не зарегистрирован на мероприятие
      security:
        - bearerAuth: []
        
  /api/v1/users:
    post:
      tags:
        - users
      summary: Регистрация нового пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUser'
      responses:
        '201':
          description: Пользователь успешно зарегистрирован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Неверные данные запроса
        '409':
          description: Пользователь с таким email уже существует
      security:
        - bearerAuth: []
  /api/v1/users/login:
    post:
      tags:
        - users
      summary: Авторизация пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginUser'
      responses:
        '200':
          description: Успешная авторизация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
        '401':
          description: Неверные учетные данные
      security:
        - bearerAuth: []
        
  /api/v1/users/{userId}:
    get:
      tags:
        - users
      summary: Получение информации о пользователе
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Успешный ответ с информацией о пользователе
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Пользователь не найден
      security:
        - bearerAuth: []
        
    patch:
      tags:
        - users
      summary: Обновление информации о пользователе
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUser'
      responses:
        '200':
          description: Информация о пользователе успешно обновлена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Пользователь не найден
        '400':
          description: Неверные данные запроса
      security:
        - bearerAuth: []
        
    delete:
      tags:
        - users
      summary: Удаление пользователя
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Пользователь успешно удален
        '404':
          description: Пользователь не найден
      security:
        - bearerAuth: []
        
  /api/v1/users/{userId}/favorites:
    get:
      tags:
        - favorites
      summary: Получение списка избранных мероприятий пользователя
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Успешный ответ со списком избранных мероприятий
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
        '401':
          description: Необходима авторизация
        '404':
          description: Пользователь не найден
      security:
        - bearerAuth: []
        
  /api/v1/users/{userId}/favorites/{eventId}:
    post:
      tags:
        - favorites
      summary: Добавление мероприятия в избранное
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
        - name: eventId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Мероприятие успешно добавлено в избранное
        '400':
          description: Мероприятие уже в избранном
        '401':
          description: Необходима авторизация
        '404':
          description: Пользователь или мероприятие не найдены
      security:
        - bearerAuth: []
        
    delete:
      tags:
        - favorites
      summary: Удаление мероприятия из избранного
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
        - name: eventId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Мероприятие успешно удалено из избранного
        '401':
          description: Необходима авторизация
        '404':
          description: Пользователь или мероприятие не найдены
      security:
        - bearerAuth: []
        
  /api/v1/events/search:
    get:
      tags:
        - search
      summary: Поиск мероприятий по ключевым словам
      parameters:
        - name: query
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Успешный ответ со списком найденных мероприятий
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'

  /api/v1/events/filter:
    get:
      tags:
        - search
      summary: Фильтрация мероприятий по различным критериям
      parameters:
        - name: industry
          in: query
          schema:
            type: string
        - name: date
          in: query
          schema:
            type: string
            format: date
        - name: format
          in: query
          schema:
            type: string
            enum: [online, offline]
        - name: location
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Успешный ответ со списком отфильтрованных мероприятий
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'

  /api/v1/events/{eventId}/reviews:
    get:
      tags:
        - reviews
      summary: Получение списка отзывов о мероприятии
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Успешный ответ со списком отзывов
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Review'
        '404':
          description: Мероприятие не найдено

    post:
      tags:
        - reviews
      summary: Создание нового отзыва о мероприятии
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateReview'
      responses:
        '201':
          description: Отзыв успешно создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
        '400':
          description: Неверные данные запроса
        '401':
          description: Необходима авторизация
        '404':
          description: Мероприятие не найдено
      security:
        - bearerAuth: []
        
  /api/v1/events/{eventId}/reviews/{reviewId}:
    patch:
      tags:
        - reviews
      summary: Обновление отзыва о мероприятии
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: integer
        - name: reviewId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateReview'
      responses:
        '200':
          description: Отзыв успешно обновлен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
        '400':
          description: Неверные данные запроса
        '401':
          description: Необходима авторизация
        '404':
          description: Мероприятие или отзыв не найдены
      security:
        - bearerAuth: []
        
    delete:
      tags:
        - reviews
      summary: Удаление отзыва о мероприятии
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: integer
        - name: reviewId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Отзыв успешно удален
        '401':
          description: Необходима авторизация
        '404':
          description: Мероприятие или отзыв не найдены
      security:
        - bearerAuth: []
        
  /api/v1/users/{userId}/notifications:
    get:
      tags:
        - notifications
      summary: Получение списка уведомлений пользователя
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Успешный ответ со списком уведомлений
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Notification'
        '401':
          description: Необходима авторизация
        '404':
          description: Пользователь не найден
      security:
        - bearerAuth: []
        
  /api/v1/users/{userId}/notifications/{notificationId}:
    put:
      tags:
        - notifications
      summary: Отметить уведомление как прочитанное
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
        - name: notificationId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Уведомление отмечено как прочитанное
        '401':
          description: Необходима авторизация
        '404':
          description: Пользователь или уведомление не найдены
      security:
        - bearerAuth: []
        
  /api/v1/events/{eventId}/stream:
    get:
      tags:
        - streams
      summary: Получение информации об онлайн-трансляции мероприятия
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Успешный ответ с информацией о трансляции
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamInfo'
        '404':
          description: Мероприятие не найдено
      security:
        - bearerAuth: []
        
  /api/v1/events/{eventId}/stream/recording:
    get:
      tags:
        - streams
      summary: Получение записи онлайн-трансляции мероприятия
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Успешный ответ с ссылкой на запись трансляции
          content:
            application/json:
              schema:
                type: string
                format: uri
        '404':
          description: Мероприятие не найдено
      security:
        - bearerAuth: []
        
  /api/v1/events/{eventId}/analytics:
    get:
      tags:
        - analytics
      summary: Получение аналитики по мероприятию
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Успешный ответ с аналитикой
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventAnalytics'
        '401':
          description: Необходима авторизация
        '404':
          description: Мероприятие не найдено
      security:
        - bearerAuth: []
        
  /api/v1/organizers/{organizerId}/analytics:
    get:
      tags:
        - analytics
      summary: Получение аналитики по организатору
      parameters:
        - name: organizerId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Успешный ответ с аналитикой
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizerAnalytics'
        '401':
          description: Необходима авторизация
        '404':
          description: Организатор не найден
      security:
        - bearerAuth: []
        
  /api/v1/admin/events:
    get:
      tags:
        - admin
      summary: Получение списка мероприятий для модерации
      responses:
        '200':
          description: Успешный ответ со списком мероприятий
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
        '401':
          description: Необходима авторизация
      security:
        - bearerAuth: []
        
  /api/v1/admin/events/{eventId}/approve:
    put:
      tags:
        - admin
      summary: Подтверждение мероприятия
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Мероприятие подтверждено
        '401':
          description: Необходима авторизация
        '404':
          description: Мероприятие не найдено
      security:
        - bearerAuth: []
        
  /api/v1/admin/events/{eventId}/reject:
    put:
      tags:
        - admin
      summary: Отклонение мероприятия
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Мероприятие отклонено
        '401':
          description: Необходима авторизация
        '404':
          description: Мероприятие не найдено
      security:
        - bearerAuth: []
        
  /api/v1/admin/reviews:
    get:
      tags:
        - admin
      summary: Получение списка отзывов для модерации
      responses:
        '200':
          description: Успешный ответ со списком отзывов
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Review'
        '401':
          description: Необходима авторизация
      security:
        - bearerAuth: []
        
  /api/v1/admin/reviews/{reviewId}/approve:
    put:
      tags:
        - admin
      summary: Подтверждение отзыва
      parameters:
        - name: reviewId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Отзыв подтвержден
        '401':
          description: Необходима авторизация
        '404':
          description: Отзыв не найден
      security:
        - bearerAuth: []
        
  /api/v1/admin/reviews/{reviewId}/reject:
    put:
      tags:
        - admin
      summary: Отклонение отзыва
      parameters:
        - name: reviewId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Отзыв отклонен
        '401':
          description: Необходима авторизация
        '404':
          description: Отзыв не найден
      security:
        - bearerAuth: []
        
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    CreateUser:
      type: object
      required:
        - email
        - password
        - first_name
        - last_name
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password
        first_name:
          type: string
        last_name:
          type: string

    LoginUser:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password

    User:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
          format: email
        first_name:
          type: string
        last_name:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    UpdateUser:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          format: password

    AuthToken:
      type: object
      properties:
        token:
          type: string
        expires_at:
          type: string
          format: date-time

    Event:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        start_date:
          type: string
          format: date-time
        end_Date:
          type: string
          format: date-time
        location:
          type: string
        format:
          type: string
          enum: [online, offline]
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    CreateEvent:
      type: object
      required:
        - title
        - description
        - start_date
        - end_date
        - location
        - format
      properties:
        title:
          type: string
        description:
          type: string
        start_date:
          type: string
          format: date-time
        end_Date:
          type: string
          format: date-time
        location:
          type: string
        format:
          type: string
          enum: [online, offline]

    UpdateEvent:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        start_Date:
          type: string
          format: date-time
        end_Date:
          type: string
          format: date-time
        location:
          type: string
        format:
          type: string
          enum: [online, offline]

    Participant:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
          format: email
        registered_at:
          type: string
          format: date-time

    Review:
      type: object
      properties:
        id:
          type: integer
        event_id:
          type: integer
        user_id:
          type: integer
        rating:
          type: integer
        text:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    CreateReview:
      type: object
      required:
        - rating
        - text
      properties:
        rating:
          type: integer
        text:
          type: string

    UpdateReview:
      type: object
      properties:
        rating:
          type: integer
        text:
          type: string

    Notification:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        event_id:
          type: integer
        type:
          type: string
          enum: [sms, email]
        message:
          type: string
        isRead:
          type: boolean
        created_at:
          type: string
          format: date-time

    StreamInfo:
      type: object
      properties:
        url:
          type: string
          format: uri
        start_Time:
          type: string
          format: date-time

    EventAnalytics:
      type: object
      properties:
        participants_count:
          type: integer
        views_count:
          type: integer
        average_rating:
          type: number

    OrganizerAnalytics:
      type: object
      properties:
        events_count:
          type: integer
        total_participants:
          type: integer
        average_rating:
          type: number