openapi: '3.0.3'
info:
  title: Yandex Practicum Career Tracker API
  version: '1.0.0'
servers:
  - url: https://api.server.test/
tags:
  - name: authorization
    description: авторизация пользователя и обновление токенов
  - name: user
    description: операции с пользователями
  - name: registration
    description: регистрация нового пользователя
  - name: boards
    description: доски пользователя
  - name: freelance boards
    description: доски пользователя для фриланс заказов
  - name: vacancy boards
    description: доски пользователя для откликов в найм       
  - name: contacts
    description: контакты пользователя
  - name: feed
    description: лента пользователя с записями
  - name: notifications
    description: уведомления
  - name: directory
    description: справочная информация
  - name: vacancy
    description: операции с вакансиями
  - name: selections
    description: операции с подборками вакансий  
  - name: metrics 
    description: метрики прогресса пользователя 
  - name: offer
    description: всё про получение оффера 
  - name: vacation
    description: отпуск


paths:
  /api/v1/token:
    post:
      tags:
        - authorization
      summary: Авторизация пользователя
      description: Авторизация пользователя по почте и паролю
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: Почта пользователя
                  example: test@yandex.ru
                password:
                  type: string
                  description: Пароль
                  example: 12345qwerty
              required:
                - email
                - password
      responses:
        '200':
          description: Успешная авторизация
          content:
            application/json:
              schema:
                type: object
                properties:
                  role:
                    type: string
                    description: Роль в системе
                    example: User
                required:
                  - role
        '401':
          description: Токен некорректен или срок его действия истёк
          content:
            application/json:
              schema:
                properties:
                  detail:
                    type: string
              example: "Не найдено активной учетной записи с указанными данными"
    
  /api/v1/token/refresh:
    post:
      tags:
        - authorization
      description: Обновление JWT токенов
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refresh:
                  type: string
              required:
                - refresh
      responses:
        '200':
          description: JWT токены успешно обновлены
        '400':
          description: Отсутствует обязательное поле "refresh"
        '401':
          description: Токен некорректен или срок его действия истёк
  
  /api/v1/register: 
    post:
      tags:
        - registration
        - user
      description: регистрация пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema: 
              properties:
                email:
                  type: string
      responses:
        '201':
          description: пользователь зарегистрирован
          content:
            application/json:
              schema: 
                properties:
                  email:
                    type: string              
  
  /api/v1/dictionary/courses:
    get: 
      tags:
        - directory
      description: курсы
      parameters:
        - name: search
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: успешно отражен список курсов
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Courses'

  /api/v1/onboarding-directory:
    get: 
      tags:
        - directory
        - onboarding 
      description: информация для онбординга студента
      responses:
        '200':
          description: данные успешно получены
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Onboarding'
                
  /api/v1/profile: 
    post: 
      tags:
        - user 
      description: создание профиля студента
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile' 
      responses:
        '201':
          description: профиль успешно создан
          content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Profile'           
  
  /api/v1/profile/current:
    patch:
      tags: 
      - user
      description: обновить инфо профиля
      requestBody:
        required: true              
        content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
      responses:
        '200':
          description: данные пользователя успешно обновлены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'           
    
  /api/v1/password_reset:
    post: 
      tags:
        - authorization
        - user
      description: сброс пароля
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                status:
                  type: string
      responses:
        '200':
          description: успешно обновлен статус запроса на восстановление пароля
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string   
              example: 
                status: OK                 
  
  /api/v1/password_resetconfirm:
    post: 
      tags:
        - authorization
        - user
      description: подтверждение и сохранение нового пароля  
      requestBody:
        required: true
        content:
          application/json:
            schema: 
              properties:
                password:
                  type: string
                token:
                  type: string
      responses:
        '200':
          description: пароль обновлён
          content:
            application/json:
              schema: 
                properties:
                  status:
                    type: string

  /api/v1/custom-boards/boards:
    post:
      tags:
        - boards
      description: добавить доску 
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                type:
                  type: string          
      responses:
        '201':
          description: доска успешно добавлена
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
              example:
                detail: "Доска набора активирована"
        '400':
          description: доска не добавлена
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
              example:
                type: "Вам недоступна такая доска или вы уже имеете такую доску"
    get: 
      tags:
        - boards
      description: посмотреть доски пользователя
      parameters:
        - name: type 
          in: query
          required: true 
          schema: 
            type: string
            description: Тип доски (обязательный параметр)
      responses:
        '200':
          description: данные о досках получены
          content:
            application/json:
              schema:
                type: object
                properties:
                  count: 
                    type: integer
                    format: int64
                  next:
                    type: string
                  previous:
                    type: string
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        pk:
                          type: integer
                          format: int64
                        name: 
                          type: string
                          enum:
                          - freelance
                          - recruitment
                        type: 
                          type: string
                        columns:
                          type: array
                          items:
                            properties:
                              pk:
                                type: integer
                                format: int64
                              name: 
                                type: string
                              position: 
                                type: integer
                                format: int64
                              board: 
                                type: integer
                                format: int64
              example:
                count: 1
                next: null
                previous: null
                results:
                    name: "freelance"
                    type: "freelance"
                    columns: 
                    - pk: 1
                      name: "Отклик"
                      position: 1
                      board: 71
  
  /api/v1/custom-boards/available-boards:
    get: 
      tags:
        - boards
      description: проверка доступных досок пользователя
      responses:
        '200':
          description: получены доступные для студента доски
          content:
            application/json:
              schema:
                type: object
                properties:
                  freelance: 
                    type: boolean
                  recruitment:
                    type: boolean
                  custom: 
                    type: boolean
              example:
                freelance: true 
                recruitment: false
                custom: false
  
  /api/v1/custom-boards/directory/freelance-sources:
    get: 
      tags:
        - directory
        - boards
        - freelance boards 
      description: источник фриланс заказа
      responses:
        '200':
          description: успешно отрображаются все источники
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    format: int64
                  next: 
                    type: string
                  previous:
                    type: string 
                  results: 
                    type: array
                    items: 
                      $ref: '#/components/schemas/FreelanceSourses' 
              example: 
                count: 10
                next: null
                previous: null
                results: 
                  pk: 1
                  name: "Знакомые (если заказали родственники или друзья)"
  
  /api/v1/custom-boards/freelance-responses:
    post: 
      tags:
        - boards
        - freelance boards
      description: добавление заказа на доску фриланса
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardFreelance'              
      responses:
        '201':
          description: успешно создана новая карточка на доске
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardFreelance' 
              example:
                id: 397
                customer: "kfkfj g"
                comment: "впмсфоывислыотвслыа"
                url: "https://hh.ru/vacancy"
                color: 4
                order_cost: 35000
                order_cost_max: 400000
                currency: 4
                source: 1
                order_for: "реклама"
                status: "Отклик"
                status_info:
                  status: 421
                  status_name: "Отклик"
                  user_date: "2024-04-07"
                previous_card: null
                next_card: null
    get: 
      tags:
        - boards
        - freelance boards
      description: открыть доску фриланса
      responses:
        '200':
          description: успешно отображена доска с заказами
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CardFreelance' 
              example:
                id: 397
                customer: "kfkfj g"
                comment: "впмсфоывислыотвслыа"
                url: "https://hh.ru/vacancy"
                color: 4
                order_cost: 35000
                order_cost_max: 400000
                currency: 4
                source: 1
                order_for: "реклама"
                status: "Отклик"
                status_info:
                  status: 421
                  status_name: "Отклик"
                  user_date: "2024-04-07"
                previous_card: 398
                next_card: null
                dnd_position: 1
  
  /api/v1/custom-boards/freelance-responses/{freelance_response_id}:
    get:
      tags:
        - boards
        - freelance boards
      description: открыть карточку на доске фриланса
      parameters:
        - name: freelance_response_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: успешно отображена карточка на доске фриланса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardFreelance' 
              example:
                id: 399
                customer: "stakeholder"
                comment: "заказ мечты"
                url: "https://hh.ru/vacancy"
                color: 5
                order_cost: 250
                order_cost_max: 300
                currency: 2
                source: 2
                order_for: "логотип"
                status: "Переговоры"
                status_info:
                  status: 421
                  status_name: "Отклик"
                  user_date: "2024-04-07"

                previous_card: null
                next_card: 397                 
    patch: 
      tags:
        - boards
        - freelance boards
      description: отредактировать карточку на доске фриланса
      parameters:
        - name: freelance_response_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/CardFreelance' 
      responses:
        '200':
          description: данные успешно обновлены
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/CardFreelance' 
              example:  
                id: 397
                customer: "Золотое яблоко"
                comment: "впмсфоывислыотвслыа"
                url: "https://hh.ru/vacancy"
                color: 4
                order_cost: 35000
                order_cost_max: 400000
                currency: 4
                source: 1
                order_for: "реклама"
                status: "Отклик"
                status_info:
                  status: 421
                  status_name: "Отклик"
                  user_date: "2024-04-07"
                previous_card: null
                next_card: null                               
    delete: 
      tags:
        - boards
        - freelance boards
      description: удалить фриланс заказ с доски
      parameters:
        - name: reelance_response_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: заказ удален #система не дает удалять карточки с доски фриланса
        '500':
          description: внутренняя ошибка сервера

  /api/v1/vacancies:
    post: 
      tags:
        - boards
        - vacancy boards
      description: добавить отклик на вакансию на доске
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCard'
      responses:
        '200':
            description: отклик успешно добавлен
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/CreateCard' 
                example:
                  id: 4306
                  status_id: "rejection"
                  profile_id": "7824439e-f241-4be3-8714-e801ea4e27d7"
                  color_id: "#C2E5CE"
                  response_date: "2024-04-07"
                  hr_interview_date: "2024-04-08"
                  test_task_date: "2024-04-10"
                  tech_interview_date: "2024-04-12"
                  boss_interview_date: "2024-04-12"
                  offer_date: "2024-04-15"
                  rejection_date: "2024-04-15"
                  last_update_datetime: "2024-04-07T10:54:42.044000Z"
                  salary: 4000
                  salary_max: 6000
                  is_partner_vacancy: false
                  company_name: "эпл"
                  comment: "проверка на уровень владения английским"
                  position: "аналитик"
                  url: null
                  is_response_reported: false
                  is_test_task_reported: false
                  is_tech_interview_reported: false
                  is_offer_reported: false
                  completed_task_url: null
                  is_sent_by_bot: false
                  is_remote_work: true
                  tab_type: null
                  card_position: 0.0
                  currency: 1
                  partner_vacancy: null
                  external_vacancy: null
                  source: 3
                  selection: null
                  previous_card: null
                  next_card: null
                  cities: []
                  cover_letter: []
                  resume: []
                  achievements:
                          name: "Письмо из Хогвартса"
                          condition_text: "Получить приглашение на HR собеседование"
                          success_image: "http://51.250.71.86:6001/django_media/achievements/HRInterviewStats/hogwarts_blue.svg"
                          success_condition: 1

  /api/v1/vacancies/{id}:
    get: 
      tags:
        - boards
        - vacancy boards
      description: карточка отклика на вакансию найма
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: открыта карточка отклика на вакансию на доске найма
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCard'
        '401':
          description: ошибка авторизации пользователя
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
              example:
                detail: "Учетные данные не были предоставлены."
    patch:
      tags:
        - boards
        - vacancy boards
      description: редактирование карточки отклика на доске найма
      parameters:
        - name: id
          in: path
          required: true
          schema: 
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCard'
      responses:
        '200':
          description: данные карточки отклика обновлены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCard'
    delete:
      tags:
        - boards
        - vacancy boards
      description: удалить отклик с доски
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: отклик удален

  /api/v1/vacancies/get-cards:
    get: 
      tags:
        - boards
        - vacancy boards
      description: посмотреть отклики на доске
      responses:
        '200':
          description: успешно отрображаются карточки откликов
          content:
            application/json:
              schema: 
                properties: 
                  response:
                    type: array
                    items:
                      $ref: '#/components/schemas/Card'
                  hr_interview_date:
                    type: array
                    items:
                      $ref: '#/components/schemas/Card'
                  test_task: 
                    type: array
                    items:
                      $ref: '#/components/schemas/Card'
                  tech_interview: 
                    type: array
                    items:
                      $ref: '#/components/schemas/Card'
                  boss_interview: 
                    type: array
                    items:
                      $ref: '#/components/schemas/Card' 
                  offer: 
                    type: array
                    items:
                      $ref: '#/components/schemas/Card' 
                  rejection: 
                    type: array
                    items:
                      $ref: '#/components/schemas/Card' 

  /api/v1/external/get-by-url:
    description: автозаполнение карточки 
    get: 
      tags:
        - boards
        - vacancy boards
      responses:
       '200':
        description: данные по вакансии получены
        content:
            application/json:
              schema:
                properties:
                  salary:
                    type: integer
                    format: int64 
                  salary_max:
                    type: integer
                    format: int64
                  vacancy_url:
                    type: string
                  position:
                    type: string
                  company_name:
                    type: string
                  source:
                    type: integer
                    format: int64
                  currency:
                    type: integer
                    format: int64
                  is_remote:
                    type: boolean
                  cities:
                    type: array
                    items:
                      type: integer
                      format: int64
              example:
                salary: null
                salary_max: null
                vacancy_url: "https://hh.ru/vacancy/94345417"
                position: "Junior Системный аналитик"
                company_name: "АФЛТ-Системс"
                source: 1
                currency: null
                is_remote: false
                cities: [1126]       

  /api/v1/directory/cohorts:
    get: 
      tags:
        - directory
        - user
      description:  Курс и когорта пользователя
      parameters:
        - name: course_id
          in: query
          description: id курса
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: получен id курса студента
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id: 
                      type: integer
                    course_id: 
                      type: integer
                    cohort_number:
                      type: integer
                    status: 
                      type: string
              example:
                id: 260 
                course_id: 37
                cohort_number: 1
                status: "Активный"
  
  /api/v1/directory/colors:
    get: 
      tags:
        - directory
        - boards
      description: цвета для карточек на доске 
      responses:
        '200':
          description: получены цвета 
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Colors' 
              example:
                id: 1
                name: Желтый
                color: "#FFE1BD"
  
  /api/v1/directory/vacancy-source:
    get: 
      tags:
        - directory
        - vacancy boards
      description: источники вакансий
      responses:
        '200':
          description: успешно отрображаются все источники вакансий
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/VacancySourses'
              example:
                id: 4
                title: "Партнёрская вакансия"
  
  /api/v1/currency-directory:
    get: 
      tags:
        - directory
        - boards 
      description: валюта в вакансии
      responses:
        '200':
          description: получены валюты 
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Currency' 
              example:
                id: 1
                name: "Доллар"
                label: "http://51.250.71.86:6001/django_media/currency/icon-dollar.svg"  
  
  /api/v1/location-directory:
    get:
      tags:
        - directory
        - user
        - boards
      description: город, указанный в вакансии
      responses:
        '200':
          description: найден город 
          content:
            application/json:
              schema: 
                type: array
                items:
                  $ref: '#/components/schemas/Location'
              example:
                id: 1128
                location: "Санкт-Петербург"
                country: "Россия"
                location_type: "город"
                timezone: "Europe/Moscow"    
  
  /api/v1/student-status:
    get:
      tags:
        - user
        - directory
      description: информация о статусе (этапе) студента
      responses:
        '200':
          description: получен статус студента
          content:
            application/json:
              schema:
                type: object
                properties:
                  value:
                    type: string
              example:
               value: "Преакселерация"                        
        '401':
          description: пользователь неавторизован
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    value: 
                      type: string
              example:
               value: "Учетные данные не были предоставлены."
    
  /api/v1/vacancies/contacts:
    post:
      tags:
        - contacts
      description: добавить контакт в карточку
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contacts'  
      responses:
        '201':
          description: контакт успешно добавлен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contacts'
              example:
                id: 11817
                first_name: "Алексей"
                last_name: "Алекеев"
                position: "мегаразработчик"
                phone: "123456789"
                email: "00@gmail.com"
                vacancy:
                  id: 4305
                  company_name: "АФЛТ-Системс"
                  type: "recruitment"
                freelance_response: []
                social_networks: 
                  id: 145
                  contact_type: 1
                  contact_info: "superstar"
                customer_or_company_name:
                  id: 4305
                  company_name: "АФЛТ-Системс"
                  type: "recruitment"
    get: 
      tags:
        - contacts
      description: получить контакт
      parameters:
        - name: page 
          in: query
          required: false
          schema: 
            type: integer
        - name: limit 
          in: query
          required: false
          schema: 
            type: integer
            default: 20 
        - name: start_date
          in: query
          required: false
          description: дата начала периода
          schema:
            type: string
            format: date
        - name: end_date
          in: query
          required: false
          description: дата окончания периода
          schema:
            type: string
            format: date
        - name: vacancy_id
          in: query
          required: false
          description: Контакты, связанные с конкретной вакансией
          schema:
            type: integer
            format: int64
        - name: reelance_response_id
          in: query
          required: false
          description: Контакты, связанные с конкретным фриланс заказом
          schema:
            type: integer
            format: int64          
      responses:
        '200':
          description: Контакт получен
          content:
            application/json:
              schema:
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                  previous:
                    type: string
                  results: 
                    type: array
                    items: 
                      $ref: '#/components/schemas/Contacts'
              example:         
                count: 1
                next: null
                previous: null
                results:
                  id: 11817
                  first_name: "Алексей"
                  last_name: "Алекеев"
                  position: "мегаразработчик"
                  phone: "123456789"
                  email: "00@gmail.com"
                  vacancy:
                    id: 4305
                    company_name: "АФЛТ-Системс"
                    type: "recruitment"
                  freelance_response: []
                  social_networks: 
                    id: 145
                    contact_type: 1
                    contact_info: "superstar"
                  customer_or_company_name:
                    id: 4305
                    company_name: "АФЛТ-Системс"
                    type: "recruitment"

  /api/v1/vacancies/contacts/{id}:
    patch:
      tags:
        - vacancy
      description: обновить данные контакта  
      parameters:
        - name: id
          in: path
          required: true
          schema: 
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contacts' 
      responses:
        '200':
          description: контакт успешно обновлен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contacts'          
    delete:
      tags:
          - vacancy
      description: удалить контакт 
      responses:
        '204':
          description: контакт успешно удален

  /api/v1/reports/feed:
    get:
      tags:
        - feed
      summary: Получение ленты записей
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Успешный ответ со списком записей
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Report'
    post:
      tags:
        - feed
      summary: Создание новой записи
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateReport'
      responses:
        '200':
          description: Запись успешно создана
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
        '400':
          description: Неверные данные запроса

  /api/v1/reports/{id}:
    get:
      tags:
        - feed
        - user
      summary: Получение информации о записи
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Успешный ответ с информацией о записи
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
        '404':
          description: Запись не найдена
    patch:
      tags:
        - feed
        - user
      summary: Редактирование записи
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateReport'
      responses:
        '200':
          description: Запись успешно обновлена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
        '400':
          description: Неверные данные запроса
        '404':
          description: Запись не найдена
    delete:
      tags:
        - feed
        - user
      summary: Удаление записи
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Запись успешно удалена
        '404':
          description: Запись не найдена
  
  /api/v1/reports/me:
    get:
      tags:
        - feed
        - user
      summary: Получение информации о записях пользователя
      parameters:
        - name: limit
          in: path
          required: true
          schema:
            type: integer
            default: 100
          example: 
            count: 1
            next: null
            previous: null
            results:
                    id: 969,
                    report_date: "2024-04-12"
                    comment: "fghklkjhgfdghjhkljhgfdghjkljkhgfhjklkjhgfghjkjjhgffghjkjhgfdghjkljfghjkkhgfhjkhh"
                    response: 0
                    test_task: 0
                    tech_interview: 0
                    offer: 0
                    profile: 
                        first_name: Dzhaga
                        course: {
                            id: 37,
                            name: Системный аналитик
                        }
                        cohort_number: 1
                        image: null
      responses:
        '200':
          description: Успешный ответ с обновленным списком записей пользователя 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'

  /api/v1/realtime-notification/showed_list:
    get:
      tags:
        - notifications
      description: Прочитанные уведомления
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Открыт список уведомлений
          content:
            application/json:
             schema:
              $ref: '#/components/schemas/Notification'

  /api/v1/realtime-notification/not_showed_list:
    get:
      tags:
        - notifications
      description: Непрочитанные уведомления
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Открыт список уведомлений
          content:
            application/json:
             schema:
              $ref: '#/components/schemas/Notification'
  
  /api/v1/realtime-notification/{id}:
    patch:
      tags: 
      - notifications
      description: Переход уведомления в статус "прочитанные"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/NotificationInfo'
      responses: 
        '200':
          description: Изменен статус уведомления
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/NotificationInfo'      

  /api/v1/realtime-notification/delete_showed:
    get:
      tags:
      - notifications 
      description: Очистить уведомление
      responses:
        '200':
          description: Уведомление просмотрено
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
              example:
                status: "OK"       
    
  /api/v1/realtime-notification/showed_all:
    get:
      tags:
      - notifications 
      description: Посмотреть все уведомления
      responses:
        '200':
          description: Уведомления просмотрены
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
              example:
                status: "OK"       
     
  /api/v1/holidays/counter:
    get: 
      description: дни отпуска
      tags:
        - offer
      responses:
        '200':
          description: Отражены дни отпуска выбранные пользователем
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
              example:
                holidays_count: 0

  /api/v1/holidays:
    post:
      tags:
        - user
      summary: Оформление отпуска
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HolidayRequest'
      responses:
        '201':
          description: Отпуск успешно оформлен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HolidayResponse'
        '400':
          description: Неверные данные запроса
        '401':
          description: Необходима авторизация
  
  #метрики
  /api/v1/advice:
    get:
      description: Cоветы
      tags:
        - metrics
      summary: Советы для пользователя на этапе Преакселерации
      responses:
        '200':
          description: Советы показаны польззоваителю
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
              example:
                id: 1
                stages: 
                  id": 1
                  name": "Расширь воронку"
                  description": "Помимо hh, можно добавлять вакансии с Хабр.Карьера, budu.jobs, geekjob, а также соц. сетей, каналов tg и групп fb"
                  url": ""
                  url_description": ""

  
  # Здесь должны быть "записаться на тренировочное собеседование" и "запись на карьерную консультацию", 
  # но у нашей команды ограничен доступ к данному функционалу
  /api/v1/vacancies/get_stats:
    get:
      description: Статистика воронки пользователя
      tags:
        - metrics
      summary: Позатели успешности процесса прохождения трекера
      responses:
        '200':
          description: Воронка показана польззоваителю
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
              example:
                all_stats: {
                    response: 0,
                    hr_interview: 0,
                    test_task: 0,
                    tech_interview: 0,
                    boss_interview: 0,
                    offer: 0,
                    rejection: 0
                }
                week_stats:
                    {
                        response: 0,
                        hr_interview: 0,
                        test_task: 0,
                        tech_interview: 0,
                        boss_interview: 0,
                        offer: 0,
                        rejection: 0,
                        date": "2024-03-31"
                    }

  /api/v1/achievements:
    description: Gосмотреть достижения
    get:
      tags:
        - metrics
      summary: Достижения пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Achievements'
      responses:
        '200':
          description: Достижения показано польззоваителю
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
              example:
                id: 1
                stages: 
                  name: "Ни шагу назад"
                  condition_text: "Сделать 1 отклик"
                  success_image: "http://51.250.71.86:6001/django_media/achievements/ResponseAchievementStats/step_blue.svg"
                  todo_image: "http://51.250.71.86:6001/django_media/achievements/ResponseAchievementStats/step_grey.svg"
                  success_condition: 1
                  current_progress: 0
                  is_success: false
                  is_hidden: false

  /api/v1/notifications/try-again:
    get:
      tags:
        - notifications
      summary: Уведомление про что-то пошло не так
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notification'
      responses:
        '200':
          description: Уведомление показано польззоваителю
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
              example:
                button_title: "Буду стараться!"
                image: "http://51.250.71.86:6001/django_media/notifications/failed-person.png"
                is_notificated: true
                text: "На прошлой неделе задачи не были закрыты. Ничего страшного, ты можешь попробовать еще. Если понадобится помощь, обратись к менеджеру по трудоустройству"
                title: "Что-то пошло не так"      

  /api/v1/terms-of-use-text/latest:
    description: Согласие на обработку данных
    get:
      tags:
        - vacancy
      description: Открыть вакансии впервые и получить форму о согласии обработки данных
      responses:
        '200':
          description: Успешно отображена форма
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                  text: 
                    type: string
                  created_at:
                    type: string
                    format: date-time 
                  confidential_url:
                    type: string
              example:
                id: 1
                text: "В Карьерном Трекере вы можете откликаться на вакансии партнёров. Партнёры - компании, которые заинтересованы в найме наших студентов и подходят под наши критерии. Мы стараемся отбирать максимально дружелюбные компании на рынке и регулярно собираем с трудоустроенных обратную связь. Для того, чтобы партнёр мог получить отклик и открыть твоё резюме, мы просим дать нам согласие на передачу данных третьим лицам."
                created_at: "2022-05-01T10:34:16.332479Z"
                confidential_url: "https://yandex.ru/legal/confidential/"        
  
  /api/v1/terms-of-use-text: 
    post:
      tags:
        - vacancy
      description: Принять согласие на обработку данных
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TermsOfUse'
      responses:
        '201':
          description: Соглашение успешно принято и создано
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TermsOfUse' 
              example:
                id: 372
                profile: "7824439e-f241-4be3-8714-e801ea4e27d7" 
                terms_of_use: 1
                created_at: "2024-04-08T08:44:50.641070Z"              
  
  /api/v1/selections:
    description: Подборки
    post: 
      tags:
        - vacancy
        - selections
      description: Создание собственной подборки вакансий
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Collection' 
      responses:
        '201':
          description: Создана новая подборка
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/Collection' 
              example:
                pk: 278
                name: 222
                image: null
                values:
                  field_name: "is_accepted"
                  field_value: "false"
                is_mailing_available: true
                vacancy_count: 313
                vacancy_types: "external"
  
  /api/v1/selections/{selectionsId}: 
    patch:
      tags:
        - vacancy
        - selections
      description: Редактирование подборки вакансий
      parameters:
        - name: selectionsid
          in: path
          required: true
          schema: 
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/Collection'
      responses:
        '200':
          description: Данные подборки успешно обновлены
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Collection'
              example:
                pk: 278
                name: 222
                image: null
                values:
                  field_name: "is_accepted"
                  field_value: "false"
                is_mailing_available: true
                vacancy_count: 313
                vacancy_types: "partner"               
    delete: 
      tags:
        - vacancy
        - selections
      description: Удаление подборки вакансий
      parameters:
        - name: selectionsId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Подборка успешно удалена

  /api/v1/hr_part/vacancy/show_vacancies_for_student:
    description: Просмотр вакансий партнерских
    get:
      tags:
        - vacancy
      description: Просмотр вакансий с применением фильтров
      parameters:
        - name: start_date
          in: query
          required: false
          description: Дата начала периода
          schema:
            type: string
            format: date
        - name: end_date
          in: query
          required: false
          description: Дата окончания периода
          schema:
            type: string
            format: date
        - name: cities
          in: query
          required: false
          description: Город в вакансии
          schema:
            type: string
        - name: limit
          in: query
          required: false
          description: Лимит отображаемых вакансий
          schema:
            type: integer
        - name: search
          in: query
          required: false
          description: Поиск вакансии по должности и названию компании
          schema:
            type: string   
      responses:
        '200':
          description: Отображены все необходимые вакансии
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/VacancyInfo' 

  /api/v1/external: 
    description: Просмотр рыночных вакансий
    get:
      tags:
        - vacancy
      description: Просмотр вакансий с применением фильтров
      parameters:
        - name: start_date
          in: query
          required: false
          description: Дата начала периода
          schema:
            type: string
            format: date
        - name: end_date
          in: query
          required: false
          description: Дата окончания периода
          schema:
            type: string
            format: date
        - name: cities
          in: query
          required: false
          description: Город в вакансии
          schema:
            type: string
        - name: limit
          in: query
          required: false
          description: Лимит отображаемых вакансий
          schema:
            type: integer
        - name: search
          in: query
          required: false
          description: Поиск вакансии по должности и названию компании
          schema:
            type: string      
      responses:
        '200':
          description: Получены вакансии со сторонних сайтов
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/VacancyInfoExternal'              

  /api/v1/hr_part/vacancy/jobboards_list_preload:
    get:
      tags:
        - vacancy
      description: Список джоббордов 
      responses:
        '200':
          description: Обновленная информация по списку джоббордов получена
          content:
            application/json:
              schema: 
                type: object
                properties:
                  partners:
                    type: boolean
                  hh:
                    type: boolean 
                  habr:
                    type: boolean 
                  vseti:
                    type: boolean 
                  rabotaru:
                    type: boolean 
                  geekjob: 
                    type: boolean
              example:
                partners: true
                hh: true
                habr: true
                vseti: true
                rabotaru: true
                geekjob: true      
  
  /api/v1/partner-directory:
    get:
      tags:
        - vacancy
        - directory
      description: Дополнительная информация о вакансиях
      responses:
        '200':
          description: Дополнительная информация о вакансиях успешно получена
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Partner' 
                
  /api/v1/external/{id}:
    get:
      tags:
        - vacancy 
      description: Открыть вакансию
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Вакансия успешно отображена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Partner' 
  
  /api/v1/vacancies/partner_response:
    post:
      tags:
        - vacancy
        - vacancy boards 
      description: Добавить отклик на доску через вакансию
      requestBody:
          required: true
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
      responses:
        '201':
          description: Отклик успешно добавлен
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
              example:
                status: "created"
                      
  /api/v1/auth/hh/token:
    description: Авторизация для интеграции 

  #оффер принят
  /api/v1/work/directory/offer-source:
    get: 
      tags:
        - offer
      description: Источник оффера 
      responses:
        '200':
          description: Отобрвжение данных компании пользователя
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
              example:
                id: 1
                name: "Партнёрская вакансия в Трекере"

    /api/v1/hr_part/workformat:
      get: 
        tags:
          - offer
        description: Формат работы на найденном месте работы 
        responses:
          '200':
            description: Отобрвжение формата работы
            content:
              application/json:
                schema:
                  properties:
                    status:
                      type: string
                example:
                  id: 1
                  value: "Офис"

    /api/v1/work/directory/probation-period-answers:
      get: 
        tags:
          - offer
        description: Закончился ли испытательный срок? 
        responses:
          '200':
            description: Отобрвжение состояния испытательного срока 
            content:
              application/json:
                schema:
                  properties:
                    status:
                      type: string
                example:
                  id: 3
                  value: "Занятость не связана с трудоустройством"

    /api/v1/work/directory/is-joined-on-workshop:
      get: 
        tags:
          - offer
        description: Участие в проектах Мастерской 
        responses:
          '200':
            description: Отобрвжение ответа пользователя об участии в Мастерской
            content:
              application/json:
                schema:
                  properties:
                    status:
                      type: string
                example:
                  id": 3
                  answer: "Не работал(а) в Мастерской"

    /api/v1/work/directory/has-experience-in-workshop:
      get: 
        tags:
          - offer
        description: Оценка пользы проектов в Мастерской
        responses:
          '200':
            description: Отобрвжение ответа пользователя о пользе участия в Мастерской
            content:
              application/json:
                schema:
                  properties:
                    status:
                      type: string
                example:
                  id: 3
                  answer: "Не знаю, что это такое"

    /api/v1/work/directory/workshop-usability:
      get: 
      tags:
        - offer
      description: Оценка баллами пользы от Мастерской
      responses:
        '200':
          description: Баллы оценки пользы Мастерской отражены корректно
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
              example:
                id: 1
                answer: "1 (совсем оказался бесполезным)"
                
components:
  schemas:

    Onboarding:
      type: object
      properties:
        courses: 
          type: array
          items:
            $ref: "#/components/schemas/Courses"
        education: 
          type: array
          items:
            properties:
              id: 
                type: integer
              name:
                type: string
                example: "Профильное (например, ИТ образование для разработчика)"
        experience:
          type: array
          items:
            properties:
              id: 
                type: integer
              name:
                type: string
                example: "Релевантный (опыт работы, стажировки, командные проекты)" 
        contact_types:
          type: array
          items:
            properties:
              id: 
                type: integer
              name:
                type: string
              icon:
                type: string
              is_vacancy_type:   
                type: boolean
        pet_project_spend_time:
          type: array
          items:
            $ref: '#/components/schemas/Pet_project_spend_time'                            
        pet_project_experience_type:
          type: array
          items:
            $ref: '#/components/schemas/Pet_project_experience_type'

    Pet_project_experience_type:
      type: object
      properties:
        id: 
          type: integer
        value:
          type: string 
    
    Pet_project_spend_time:
      type: object
      properties:
        id: 
          type: integer
        min:
          type: integer
        max:
          type: integer        

    Courses:
      type: object
      properties:
              id: 
                type: integer
              name:
                type: string
                example: "Android"

    Profile: 
      type: object
      properties:
        id:
          type: string
          format: uuid 
        first_name: 
          type: string
          example: "Петр"
        last_name: 
          type: string
          example: "Петров"
        gender: 
          type: string
          example: "male"
        city:
          type: object
          properties:
            id:
              type: integer
            location: 
              type: string
              example: "Санкт-Петербург"
            country:
              type: string
              example: "Россия" 
        birth_date: 
          type: string
          format: date-time
        course: 
          $ref: '#/components/schemas/Courses'
        cohort_number: 
          type: integer
          example: 3
        previous_job_name:
          type: string
        previous_job_position: 
          type: string
        education_type: 
          type: integer
          example: 1
        experience_type: 
          type: integer
          example: 1
        institution: 
          type: string
          example: "МГУ"
        image:
          type: string
          example: "http://51.250.71.86:6001/django_media/profile/%D0%BB%D1%83%D1%87%D1%88%D0%B5%D0%B5_%D1%80%D0%B5%D0%B7%D1%8E%D0%BC%D0%B5.jpg"
        contact_type:
          type: string
        contact_info:
          type: string
        portfolio_url:
          type: string
        last_report_update_datetime:
          type: string
          format: date-time
          example: "2024-04-09T21:24:17.972227Z"
        terms_of_use_accepted: 
          type: boolean
          example: false
        workshop_terms_of_use_accepted:
          type: boolean
          example: false
        status: 
          type: string
          example: "Преакселерация"
        student_tasks:
          type: object
          properties: 
            responses_count:
              type: integer
            week_reports:
              type: integer
            contacts_added:
              type: integer
            popup_url: 
              type: string
              example: "/notifications/try-again"
        has_hidden_advices:
          type: boolean
        has_hidden_vacancies:
          type: boolean
        pet_project_experience_type: 
          $ref: '#/components/schemas/Pet_project_experience_type'
        pet_project_spend_time: 
          $ref: '#/components/schemas/Pet_project_spend_time'   
        pet_project_count:
          type: integer
          example: 0
        pet_project_dreams:
          type: string
        contacts:
          type: array
          items:
            properties:
              contacts:
                type: object 
                properties:
                  id:
                    type: integer
                    example: 2550
                  type: 
                    type: integer
                    example: 1
                  value:
                    type: string
                    example: "privet1"
                  link: 
                    type: string 
                    example: "https://t.me/privet1"
        is_workshop_available:
          type: boolean
        recruitment_board_activated:
          type: boolean
        resume:
          type: array
          items:
            type: string

    Report:
      type: object
      properties:
        id:
          type: integer
        text:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    CreateReport:
        type: object
        required:
          - text
        properties:
          text:
            type: string

    UpdateReport:
      type: object
      properties:
        text:
          type: string

    Notification:
      type: object
      properties:
        count:
          type: integer
        next:
          type: integer
        previous:
          type: integer
        results:
          type: array
          items:
            $ref: '#/components/schemas/NotificationInfo' 

    NotificationInfo:
      type: object
      properties: 
        pk: 
          type: integer
          example: 6114821
        user: 
          type: integer
          example: 908
        text: 
          type: string
          example: "Поздравляем с получением оффера! Расскажи подробнее своему менеджеру по трудоустройству или нажми кнопку “Оффер принят“"
        is_showed: 
          type: boolean
          example: false
        type: 
          type: string
          example: "vacancy_card_offer"
        trigger_obj_id: 
          type: string
          example: "4334"
        created_at: 
          type: string
          format: date-time
          example: "2024-04-10T10:01:04.789526Z"
        meta_info: 
          type: string

    FreelanceSourses:
      type: object
      properties:
        pk:
          type: integer
          format: int64
        name:
          type: string
          enum:
          - Знакомые (если заказали родственники или друзья)
          - Сарафанное радио (если родственники или друзья порекомендовали)
          - Фриланс-биржи (FL, Workzilla и т.п)
          - Социальные сети (инст, фб, вк)
          - Конкурсные платформы (dizkon)
          - Мессенджеры (тг, ватсап)
          - Пассивный поиск (клиент пришел самостоятельно)
          - Сервисы трудоустройства (hh и т.п)
          - Другое

    VacancySourses:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title: 
          type: string
          enum:
            - hh
            - Habr 
            - Telegram 
            - Партнёрская вакансия  
            - Знакомые
            - Прямой отклик
            - Другое
            - LinkedIn
            - Нетворкинг

    Colors: 
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 5
        name: 
          type: string
          enum:
          - Желтый
          - Фиолетовый
          - Зеленый
          - Голубой
          - Розовый
          example: Розовый
        color: 
          type: string
          enum: 
          - "#FFE1BD"
          - "#CCC2ED"
          - "#C2E5CE"
          - "#ACCCFF"
          - "#FFDDE5"
          example: "#FFDDE5"
      
    Currency: 
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          enum:
          - Доллар
          - Евро
          - Фунт
          - Рубль
          - Шекель
          - Тенге
        label: 
          type: string  

    Location: 
      type: object
      properties:
        id:
          type: integer
          format: int64  
        location:
          type: string
        country:
          type: string
        location_type:
          type: string
        timezone:
          type: string

    Achievements:
      type: object
      properties:
        name:
          type: string 
        condition_text:
          type: string
        success_image:
          type: string
        success_condition:
          type: integer
          format: int64

    Contacts:
      type: object
      properties:
        id:
          type: integer
          format: int64
        first_name:
          type: string
        last_name:
          type: string
        position:
          type: string
        phone:
          type: string
        email:
          type: string
        vacancy: 
          type: object
          properties:
            id:
              type: integer
              format: int64
            company_name:
              type: string
            type:
              type: string
        freelance_response:
          type: object
          properties:
            id:
              type: integer
              format: int64
            company_name:
              type: string
            type:
              type: string 
        social_networks: 
          type: object
          properties:
            id:
              type: integer
              format: int64
            contact_type:
              type: integer
              format: int64
            contact_info:
              type: string
        customer_or_company_name: 
          type: object
          properties:
            id:
              type: integer
              format: int64
            company_name:
              type: string
            type:
              type: string 
        achievements:
          type: array
          items:
            $ref: '#/components/schemas/Achievements'

    CreateCard:
      type: object
      properties:
        id:
          type: integer
          format: int64
        status_id:
          type: integer
          format: int64
        profile_id: 
          type: string
        color_id: 
          type: string
        response_date:
          type: string
          format: date
        hr_interview_date:
          type: string
          format: date
        test_task_date:
          type: string
          format: date
        tech_interview_date:
          type: string
          format: date
        boss_interview_date:
          type: string
          format: date
        offer_date:
          type: string
          format: date
        rejection_date:
          type: string
          format: date
        last_update_datetime:
          type: string
          format: date-time
        salary:
          type: integer
          format: int64
        salary_max:
          type: integer
          format: int64
        is_partner_vacancy: 
          type: boolean
        company_name:
          type: string
        comment: 
          type: string
        position:
          type: string
        url: 
          type: string
        is_response_reported:
          type: boolean
        is_test_task_reported:
          type: boolean
        is_tech_interview_reported:
          type: boolean
        is_offer_reported:
          type: boolean 
        completed_task_url:
          type: string
        is_sent_by_bot: 
          type: boolean
        is_remote_work:
          type: boolean
        tab_type:
          type: string
        card_position:
          type: integer
        currency:
          type: integer
          format: int64
        partner_vacancy:
          type: string
        external_vacancy:
          type: string
        source:
          type: integer
          format: int64
        selection:
          type: string
        previous_card:
          type: integer
          format: int64
        next_card:
          type: integer
          format: int64
        cities:
          type: string
        cover_letter:
          type: string
        resume:
          type: string
        achievements:
          type: array
          items:
            $ref: '#/components/schemas/Achievements'

    Card: 
      type: object
      properties:
        id:
          type: integer
          format: int64
        status_id:
          type: integer
          format: int64
        url: 
          type: string
        color_id: 
          type: string
        position:
          type: string  
        company_name:
          type: string
        is_partner_vacancy: 
          type: boolean
        response_date:
          type: string
          format: date
        hr_interview_date:
          type: string
          format: date
        test_task_date:
          type: string
          format: date
        tech_interview_date:
          type: string
          format: date
        boss_interview_date:
          type: string
          format: date
        offer_date:
          type: string
          format: date
        rejection_date:
          type: string
          format: date
        
    CardFreelance:
      type: object
      properties:
        id:
          type: integer
          format: int64
        customer: 
          type: string
        comment:
          type: string
        url:
          type: string
        color: 
          type: integer
          format: int64
        order_cost:
          type: integer
          format: int64
        order_cost_max:
          type: integer
          format: int64
        currency: 
          type: integer
          format: int64
        source: 
          type: integer
          format: int64   
        order_for:
          type: string 
        status: 
          type: string
        status_info:
          type: array
          items:
            properties:
              status: 
                type: integer 
                format: int64
              status_name:
                type: string
              user_date:
                type: string
                format: date-time       
        previous_card:
          type: integer 
          format: int64
        next_card:
          type: integer 
          format: int64 

    TermsOfUse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        profile: 
          type: string
        terms_of_use:
          type: string
        created_at:
          type: string
          format: date-time 

    Collection:
      type: object
      properties:
        pk:
          type: integer
          format: int64
        name:
          type: string
        image:
          type: string
        values: 
          type: array
          items:
            properties:
              field_name:
                type: string  
              field_value:
                type: string         
        is_mailing_available:
          type: boolean
        vacancy_count:
          type: integer
          format: int64
        vacancy_types:
          type: array
          items:
            properties:
              vacancy_types:
                type: string 

    VacancyInfo:
      type: object
      properties:
        count:
          type: integer
          format: int64
          example: 4  
        next:
          type: string
        previous:
          type: string
          example: null
        results: 
          type: array
          items:
            properties:
              id:
                type: integer
                example: 48
              company_name: 
                type: string
                example: "Дневник"
              company_is_verified: 
                type: boolean
                example: false
              website:
                type: string
                example: "www.apple.com"
              position:
                type: string
                example: "python разработчик"
              courses:
                type: array
                items:
                  type: integer
                  example:  18,27
              salary: 
                type: integer
                example: 70000
              salary_max: 
                type: integer
                example: null
              currency: 
                type: integer
                example: 1
              test_task_url:
                type: string
                example: "https://www.rbc.ru"
              cities:
                type: array
                items: 
                  type: object
                  properties:
                    id: 
                      type: integer
                      example: 1128
                    location:
                      type: string
                      example: "Санкт-Петербург"
                    country:
                      type: string
                      example: "Россия"
              design_formats:
                type: array
                items:
                  type: integer
                  example:  1,2,3,4,5 
              work_format:
                type: array
                items:
                  type: integer
                  example:  1,2,3  
              employment: 
                type: array
                items:
                  type: integer
                  example:  1,2,3,4,5 
              experience_type: 
                type: array
                items:
                  type: integer
                  example:  1,2,3
              education_type:
                type: array
                items:
                  type: integer
                  example:  1,2,3
              vacancy_info: 
                type: string
                example: "ропрврплрлжпжыооршоп"
              responsibilities: 
                type: string
                example: "ршрпшрпшрпдкпршу-лпл"
              circs: 
                type: string
                example: "-тлукцтэкцу\r\n-полцкитрлокитрло\r\n-лтлкижлицкжицкэи"
              mandatory_requirements: 
                type: string
                example: "-окиплоцижии\r\n-ршпиип"
              optional_requirements: 
                type: string
                example: "-оирикжпицукипк"
              selection_stages: 
                type: string
                example: "шпшупшкупиукпоо"
              vacancy_url: 
                type: string
                example: "https://practicum.yandex.ru/"
              is_accepted: 
                type: boolean
                example: false
              company_confidential_url:
                type: string
                example: null
              is_remote_work: 
                type: boolean
                example: false
              company_logo: 
                type: string
                example: null
              big_cover: 
                type: string
                example: null
              is_viewed:
                type: boolean
                example: false
              start_date: 
                type: string
                format: date
                example: "2022-10-02"
              advice:
                type: string
                example: null

    VacancyInfoExternal:
      type: object
      properties:
        count:
          type: integer
          format: int64
          example: 4  
        next:
          type: string
        previous:
          type: string
          example: null
        results: 
          type: array
          items:
            $ref: '#/components/schemas/Partner'    
    
    Vacancy:
      type: object
      properties:
        id:
          type: integer
          example: 48
        company_name: 
          type: string
          example: "Дневник"
        company_is_verified: 
          type: boolean
          example: false
        website:
          type: string
          example: "www.apple.com"
        position:
          type: string
          example: "python разработчик"
        courses:
          type: array
          items:
            type: integer
            example:  18,27
        salary: 
          type: integer
          example: 70000
        salary_max: 
          type: integer
          example: null
        currency: 
          type: integer
          example: 1
        test_task_url:
          type: string
          example: "https://www.rbc.ru"
        cities:
          type: array
          items: 
            type: object
            properties:
              id: 
                type: integer
                example: 1128
              location:
                type: string
                example: "Санкт-Петербург"
              country:
                type: string
                example: "Россия"
        design_formats:
          type: array
          items:
            type: integer
            example:  1,2,3,4,5 
        work_format:
          type: array
          items:
            type: integer
            example:  1,2,3  
        employment: 
          type: array
          items:
            type: integer
            example:  1,2,3,4,5 
        experience_type: 
          type: array
          items:
            type: integer
            example:  1,2,3
        education_type:
          type: array
          items:
            type: integer
            example:  1,2,3
        vacancy_info: 
          type: string
          example: "ропрврплрлжпжыооршоп"
        responsibilities: 
          type: string
          example: "ршрпшрпшрпдкпршу-лпл"
        circs: 
          type: string
          example: "-тлукцтэкцу\r\n-полцкитрлокитрло\r\n-лтлкижлицкжицкэи"
        mandatory_requirements: 
          type: string
          example: "-окиплоцижии\r\n-ршпиип"
        optional_requirements: 
          type: string
          example: "-оирикжпицукипк"
        vacancy_url: 
          type: string
          example: "https://practicum.yandex.ru/"
        is_accepted: 
          type: boolean
          example: false
        company_logo:
          type: string
          example: "https://hhcdn.ru/employer-logo/2889965.jpeg"
        is_remote_work: 
          type: boolean
          example: false
        is_viewed:
          type: boolean
          example: false
        start_date: 
          type: string
          format: date
          example: "2022-10-02"
        source:
          type: string
          example: "hh.ru"
        hh_vacancy_id: 
          type: string
          example: "80736556"

    Partner: 
      type: object
      properties:
        design_formats:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              value: 
                type: string
                example: "Трудовой договор"
        work_format:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              value: 
                type: string
                example: "Офис"
        employment:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              value: 
                type: string
                example: "Полная"
        courses:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              name: 
                type: string
                example: "GO-разработчик"
              faculty:
                type: integer
        currencies:
          $ref: '#/components/schemas/Currency'  

    HolidayRequest:
      type: object
      required:
        - start_date
        - end_date
      properties:
        start_date:
          type: string
          format: date
          description: Дата начала отпуска
        end_date:
          type: string
          format: date
          description: Дата конца отпуска
        reason:
          type: string
          description: Причина ухода в отпуск (необязательное поле)

    HolidayResponse:
      type: object
      properties:
        id:
          type: integer
          description: Идентификатор отпуска
        start_date:
          type: string
          format: date
          description: Дата начала отпуска
        end_date:
          type: string
          format: date
          description: Дата конца отпуска
        status:
          type: string
          description: Статус отпуска (pending, approved, rejected) 